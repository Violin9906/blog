(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{542:function(a,s,t){"use strict";t.r(s);var n=t(14),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("最近在写人工智能的大作业，顺手搭一个anaconda的环境出来，顺便记录一下过程，方便没有docker基础的同学参考。")]),a._v(" "),t("h2",{attrs:{id:"step-0x00-安装docker"}},[a._v("STEP 0x00 安装Docker")]),a._v(" "),t("p",[a._v("docker是一个开源的应用容器引擎，你可以简单地把它理解为虚拟机（其实和虚拟机还是有区别的）。不管你的电脑是windows，linux还是mac，只要使用相同的docker镜像运行一个容器，就可以在容器中运行你的程序，不必担心依赖和兼容性问题。")]),a._v(" "),t("p",[a._v("安装docker的步骤不是本文的重点，可以参考网络上其它教程。windows电脑可能需要开启hyper-v，并且有可能需要在bios中启用虚拟化技术，或者需要安装vbox等虚拟机软件。docker官网:"),t("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.docker.com/products/docker-desktop",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.docker.com/products/docker-desktop"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"step-0x01-启动anaconda容器并安装jupyter"}},[a._v("STEP 0x01 启动anaconda容器并安装jupyter")]),a._v(" "),t("p",[a._v("安装好docker并确认服务启动后，直接运行如下命令就可以基于官方的anaconda3镜像实例化一个本地容器：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -it --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"anaconda"')]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8888")]),a._v(":8888 continuumio/anaconda3 /bin/bash\n")])])]),t("p",[a._v("参数"),t("code",[a._v("-it")]),a._v("是启用交互式终端，"),t("code",[a._v('--name="anaconda"')]),a._v("是给容器起名字（只要你记得住，可以换成别的名字），"),t("code",[a._v("-p 8888:8888")]),a._v("是将容器的8888端口映射到本地的8888端口，便于访问jupyter。")]),a._v(" "),t("p",[a._v("docker会自动从docker hub下载最新的anaconda3镜像并创建容器，之后你就进入容器中了。在容器中，运行如下命令安装jupyter笔记本")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("conda "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -c conda-forge jupyterlab\n")])])]),t("p",[a._v("如果你需要传统的jupyter notebook，请参阅jupyter官网的教程。")]),a._v(" "),t("h2",{attrs:{id:"step-0x02-启动jupyter笔记本-玩耍"}},[a._v("STEP 0x02 启动jupyter笔记本&玩耍")]),a._v(" "),t("p",[a._v("启动jupyter lab：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~\njupyter lab --ip"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*'")]),a._v(" --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8888")]),a._v(" --no-browser --allow-root\n")])])]),t("p",[a._v("然后你应该能看到类似")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("I "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(":37:11.236 LabApp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" Use Control-C to stop this server and shut down all kernels "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("twice to skip confirmation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("C "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(":37:11.239 LabApp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n    \n    To access the notebook, "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" this "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" a browser:\n        file:///root/.local/share/jupyter/runtime/nbserver-30-open.html\n    Or copy and "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("paste")]),a._v(" one of these URLs:\n        http://10f788d1f6a3:8888/?token"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("***********\n     or http://127.0.0.1:8888/?token"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("**********\n")])])]),t("p",[a._v("的输出，把那个链接复制到浏览器打开，就能看到熟悉的jupyter lab界面了。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://pic4.zhimg.com/80/v2-a57740f2a4036ac508f61b9db49cf51a_720w.jpg",alt:"img"}})]),a._v(" "),t("p",[a._v("尽情玩耍吧！")]),a._v(" "),t("h2",{attrs:{id:"step-0x03-退出容器"}},[a._v("STEP 0x03 退出容器")]),a._v(" "),t("p",[a._v("玩够了？")]),a._v(" "),t("p",[a._v("首先按Control+C退出jupyter笔记本，然后运行命令")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n")])])]),t("p",[a._v("就这么简单。")]),a._v(" "),t("h2",{attrs:{id:"step-0x04-重启动容器"}},[a._v("STEP 0x04 重启动容器")]),a._v(" "),t("p",[a._v("下次再使用这个容器，不需要再从头配置了，就像虚拟机一样，直接开机就好。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start anaconda\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it anaconda /bin/bash\n")])])]),t("p",[a._v("第一行是运行容器anaconda（这是之前用--name参数起的名字，还记得不？），第二行是在容器anaconda中运行交互式终端（你也可以在容器启动后单独使用第二行命令创建更多的终端连接到容器，比如在不退出jupyter的情况下用pip安装某个模块）")]),a._v(" "),t("p",[a._v("然后，请参考STEP 0x02运行jupyter。")]),a._v(" "),t("h2",{attrs:{id:"step-0x05-删除容器"}},[a._v("STEP 0x05 删除容器")]),a._v(" "),t("p",[a._v("玩够了？")]),a._v(" "),t("p",[a._v("请确保你容器中没有重要数据了，否则请使用"),t("code",[a._v("docker cp")]),a._v("命令将它拷贝出来，用法类似普通的cp命令。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 反过来也可以把本地文件拷贝到容器中")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" anaconda:你容器中数据的路径 你的本地路径\n")])])]),t("p",[a._v("使用"),t("code",[a._v("docker rm")]),a._v("命令删除容器。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" anaconda\n")])])]),t("p",[a._v("如果还想删除下载的镜像，可以使用"),t("code",[a._v("docker image rm")]),a._v("命令。首先列出所有镜像，看一下image id。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("                                                          \nREPOSITORY              TAG                 IMAGE ID            CREATED             SIZE\ncontinuumio/anaconda3   latest              bdb4a7e92a49        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" weeks ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".7GB\n")])])]),t("p",[a._v("然后")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" bdb4a7e92a49\n")])])]),t("h2",{attrs:{id:"step-0x06-更进一步"}},[a._v("STEP 0x06 更进一步")]),a._v(" "),t("p",[a._v("每次用完都要用"),t("code",[a._v("docker cp")]),a._v("拷贝文件太麻烦？可以在创建容器的时候指定文件系统映射。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -it --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"anaconda_2"')]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8888")]),a._v(":8888 -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(":/root continuumio/anaconda3 /bin/bash\n")])])]),t("p",[a._v("参数"),t("code",[a._v("-v")]),a._v("将 当前目录"),t("code",[a._v("pwd")]),a._v("挂载到容器的"),t("code",[a._v("/root")]),a._v("目录，容器中对"),t("code",[a._v("/root")]),a._v("所做的改动会同步到主机。注意"),t("code",[a._v("pwd")]),a._v("两侧有反引号，表示此处使用命令"),t("code",[a._v("pwd")]),a._v("的输出 ，也可以指定本地的其它目录。不过，可能要注意一下本地目录的权限问题，以及在windows电脑上可能会有一些文件系统的冲突（比如不支持软连接啦等等，我也没试过，我的主力机是mac）。")]),a._v(" "),t("h2",{attrs:{id:"step-0x07-总结"}},[a._v("STEP 0x07 总结")]),a._v(" "),t("p",[a._v("把命令总结一下：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 头一次用")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -it --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"anaconda"')]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8888")]),a._v(":8888 continuumio/anaconda3 /bin/bash\nconda "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -c conda-forge jupyterlab\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~\njupyter lab --ip"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*'")]),a._v(" --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8888")]),a._v(" --no-browser --allow-root\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 用完以后")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Ctrl+C退出jupyter")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 以后再用")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start anaconda\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it anaconda /bin/bash\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~\njupyter lab --ip"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*'")]),a._v(" --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8888")]),a._v(" --no-browser --allow-root\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不想要了")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" anaconda\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);